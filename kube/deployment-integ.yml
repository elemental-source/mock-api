apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: dev
  name: mock-api
  labels:
    app: mock-api
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: mock-api
      annotations:
          iam.amazonaws.com/role: citadel-prod
    spec:
      restartPolicy: Always
      volumes:
      - name: mock-api-data
        emptyDir: {}
      - name: git-secret # revisar esse cara para ter permiss√µes no repo
        secret:
          secretName: git-creds-labs
          items:
            - key: known_hosts
              path: known_hosts
              mode: 0400
            - key: ssh
              path: ssh
              mode: 0400

      containers:
      - name: mock-api-server
        image: registry.docker.elo7aws.com.br/mock-api:latest
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: mock-api-integ
        ports:
        - containerPort: 9090
        resources:
          limits:
            cpu: 1.0
            memory: 1024Mi
          requests:
            cpu: 0.5
            memory: 1024Mi
        volumeMounts:
        - name: mock-api-data
          mountPath: /data

      initContainers:
      - name: mock-api-clone
        image: k8s.gcr.io/git-sync:v2.0.6
        imagePullPolicy: Always
        volumeMounts:
        - name: mock-api-data
          mountPath: /git
        - name: git-secret
          mountPath: /etc/git-secret
          readOnly: true
        env:
        - name: GIT_SYNC_REPO
          value: git@github.com:elo7/labs.git
        - name: GIT_SYNC_BRANCH
          value: "hackday-mock-api"
        - name: GIT_SYNC_SSH
          value: "true"
        - name: GIT_KNOWN_HOSTS
          value: "true"
        - name: GIT_SYNC_ONE_TIME
          value: "true"
        securityContext:
          runAsUser: 0

      serviceAccountName: default
      nodeSelector:
        elo7-environment: "dev"

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mock-api-ingress
  namespace: dev
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
spec:
  rules:
  - host: mock-api.kube.aws.elo7.io
    http:
      paths:
      - backend:
          serviceName: mock-api
          servicePort: 80

---

apiVersion: "v1"
kind: "Service"
metadata:
  name: "mock-api"
  namespace: dev
  labels:
    name: "mock-api"
spec:
  ports:
  - port: 80
    targetPort: 9090
  selector:
    app: "mock-api"
